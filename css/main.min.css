@font-face{font-family:"kazinform-icon";src:url(../fonts/kazinform-icon/icomoon.eot?kxz38z);src:url(../fonts/kazinform-icon/icomoon.eot?kxz38z#iefix) format("embedded-opentype"),url(../fonts/kazinform-icon/icomoon.ttf?kxz38z) format("truetype"),url(../fonts/kazinform-icon/icomoon.woff?kxz38z) format("woff"),url(../fonts/kazinform-icon/icomoon.svg?kxz38z#kazinform-icon) format("svg");font-weight:400;font-style:normal;font-display:swap}[class*=" icon-"]:before,[class^=icon-]:before{font-family:"kazinform-icon";font-style:normal;font-weight:400;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;display:block}.icon-play:before{content:"\e90c"}.icon-search:before{content:"\e900"}.icon-soc-android:before{content:"\e901"}.icon-soc-facebook:before{content:"\e902"}.icon-soc-instagram:before{content:"\e903"}.icon-soc-mail:before{content:"\e904"}.icon-soc-ok:before{content:"\e905"}.icon-soc-rss:before{content:"\e906"}.icon-soc-telegram:before{content:"\e907"}.icon-soc-twitter:before{content:"\e908"}.icon-soc-vk:before{content:"\e909"}.icon-soc-whatsapp:before{content:"\e90a"}.icon-soc-youtube:before{content:"\e90b"}*{padding:0;margin:0;border:0}*,:after,:before{-webkit-box-sizing:border-box;box-sizing:border-box}aside,footer,header,nav,section{display:block}body,html{height:100%;min-width:320px}html{font-size:16px}body{line-height:1;font-family:"Commissioner";-ms-text-size-adjust:100%;-moz-text-size-adjust:100%;-webkit-text-size-adjust:100%;color:#000}button,input,textarea{font:inherit "Commissioner"}input::-ms-clear{display:none}button{background:inherit;cursor:pointer}button::-moz-focus-inner{padding:0;border:0}a,a:hover,a:visited{text-decoration:none}ul li{list-style:none}img{vertical-align:top;max-width:100%;height:auto}h1,h2,h3,h4,h5,h6{font-weight:inherit;font-size:inherit}.wrapper,body._lock{overflow:hidden}.wrapper{width:100%;min-height:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}._container{max-width:1300px;margin:0 auto}.footer__share .links-share__link:hover span,.swiper-button-next,.swiper-button-prev{color:#fff}.swiper-button-next::after,.swiper-button-prev::after{font-size:30px}.header__top{padding:20px 0}.header__row{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header__row_wide{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.header__nav{padding:8px 0;background:#133d8b}.menu-main__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.menu-main__item{margin-right:25px}.menu-main__item:last-child{margin-right:0}.menu-main__link{font:20px "Oswald";color:#fff;text-transform:uppercase;-webkit-transition:all .2s;-o-transition:all .2s;transition:all .2s}.menu-main__link:hover{opacity:.7}.links-partner{position:relative;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding-right:100px}.links-partner__link{margin-right:10px}.footer__share .links-share__item:last-child,.links-partner__link:last-child{margin-right:0}.links-partner__link_absolute{position:absolute;right:0;bottom:-10%}.footer{padding-top:70px}.footer__1{background:#133d8b}.footer__2{border-top:2px solid #fff;background:#052869}.footer__row,.footer__share .links-share__list{display:-webkit-box;display:-ms-flexbox;display:flex}.footer__row{-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding:20px 0}.footer__share .links-share__list{-webkit-box-align:center;-ms-flex-align:center;align-items:center}.footer__share .links-share__item{margin-bottom:0;margin-right:15px}.footer__share .links-share__link{background:unset}.footer__contact,.footer__copyright{color:#fff}.menu-addit__list,.menu-bottom__list{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.menu-addit__item,.menu-bottom__item{margin-right:30px}.menu-addit__item:last-child,.menu-bottom__item:last-child{margin-right:0}.menu-addit__link,.menu-bottom__link{color:#fff;font-size:15px;border-bottom:1px solid transparent;-webkit-transition:all .2s;-o-transition:all .2s;transition:all .2s;font-weight:400}.anounce-banner__link:hover .anounce-banner__title,.menu-addit__link:hover,.menu-bottom__link:hover{border-color:rgba(255,255,255,.6)}.anounce-top{padding:40px 0}.anounce-top__wrap{position:relative;display:grid;grid-gap:20px;grid-template-columns:8fr 4fr;grid-template-rows:repeat(2,280px);height:570px}.anounce-top__share{position:absolute;top:0;left:-45px}.anounce-banner{position:relative;background-size:cover;background-position:center center;background-repeat:no-repeat;padding:30px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}.anounce-banner__link{display:inline;position:relative;z-index:2}.anounce-banner__link:hover .anounce-banner__play::after{opacity:1}.anounce-banner__title{display:inline;color:#fff;font-size:20px;font-weight:700;line-height:1.2em;text-shadow:2px 2px 3px rgba(0,0,0,.5);-webkit-transition:all .2s;-o-transition:all .2s;transition:all .2s;padding-bottom:1px;border-bottom:1px solid transparent}.anounce-banner__tags{margin-top:20px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;position:relative;z-index:2}.anounce-banner__tags>*{margin-right:15px}.anounce-banner__tags>:last-child{margin-right:0}.anounce-banner_big{padding:50px;grid-row:1/3}.anounce-banner_big .anounce-banner__title{font-size:33px}.anounce-banner_big .anounce-banner__tags{margin-top:30px}.anounce-banner::after{content:"";display:block;position:absolute;top:0;left:0;width:100%;height:100%;z-index:1;background:-webkit-gradient(linear,left top,left bottom,color-stop(21.43%,transparent),to(rgba(0,0,0,.8)));background:-o-linear-gradient(top,transparent 21.43%,rgba(0,0,0,.8) 100%);background:linear-gradient(180deg,transparent 21.43%,rgba(0,0,0,.8) 100%)}.anounce-banner__play{color:#fff;font-size:50px;margin-bottom:20px;display:inline-block;position:relative}.anounce-banner__play::after{content:"";display:block;opacity:0;-webkit-transition:all .2s;-o-transition:all .2s;transition:all .2s;width:70px;height:70px;border-radius:50%;background:#af1c08;position:absolute;z-index:-1;top:-10px;left:-10px}.banner__wrap{display:grid;grid-gap:20px;grid-template-columns:repeat(3,1fr)}.banner__item{height:70px;width:100%}.banner__img{width:100%;height:100%;-o-object-fit:contain;object-fit:contain}.news-list__wrap{padding:25px 0;display:grid;grid-auto-flow:row;grid-gap:25px}.news-list__more,.news-list__more a{-webkit-transition:all .2s;-o-transition:all .2s;transition:all .2s}.news-list__more{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:stretch;-ms-flex-pack:stretch;justify-content:stretch;height:30px;border:1px solid #bcbcbc}.news-list__more a{text-align:center;font-size:14px;color:#bcbcbc;display:block;width:100%;line-height:30px}.news-list__more:hover{background:#f0f0f0}.news-list__more:hover a{color:#909090}.anounce-news{display:grid;grid-template-columns:200px 1fr;grid-gap:20px}.anounce-news__img{width:200px;height:135px;position:relative}.anounce-news__img img,.news-addit__img img,.person-item__img img{width:100%;height:100%;-o-object-fit:cover;object-fit:cover}.anounce-news__date{top:5px;right:5px;z-index:1}.anounce-news__name{display:inline;font-size:24px;color:#000;line-height:1.2em;-webkit-transition:all .2s;-o-transition:all .2s;transition:all .2s;border-bottom:1px solid transparent}.anounce-news__link{display:inline}.analytics-widget__link:hover .analytics-widget__name,.anounce-news__link:hover .anounce-news__name,.edict-widget__link:hover .edict-widget__name,.news-addit__link:hover .news-addit__name,.person-item__link:hover .person-item__name span,.popular-widget__link:hover span{border-color:rgba(0,0,0,.6)}.anounce-news__tags{margin-top:15px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-bottom:-10px}.anounce-news__tags>*{margin-right:15px;margin-bottom:10px}.anounce-news__tags>:last-child{margin-right:0}.popular-widget__title{margin-bottom:15px}.popular-widget__item{margin-bottom:15px;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.popular-widget__item:last-child{margin-bottom:0}.popular-widget__num{font:32px "Oswald";text-align:right;color:#bcbcbc;margin-right:20px}.popular-widget__link{display:inline}.popular-widget__link span{color:#000;line-height:1.2em;font-size:16px;display:inline;-webkit-transition:all .2s;-o-transition:all .2s;transition:all .2s;border-bottom:1px solid transparent}.analytics-widget__title{margin-bottom:15px}.analytics-widget__wrap{display:grid;grid-gap:15px;grid-auto-flow:row;grid-template-columns:1fr 1fr}.analytics-widget__img{width:100%;margin-bottom:15px}.analytics-widget__name{color:#000;line-height:1.2em;font-size:16px;display:inline;-webkit-transition:all .2s;-o-transition:all .2s;transition:all .2s;border-bottom:1px solid transparent}.analytics-widget__tags{margin-top:15px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-bottom:-10px}.analytics-widget__tags>*{margin-right:5px;margin-bottom:5px}.analytics-widget__tags>:last-child{margin-right:0}.edict-widget__title{margin-bottom:15px}.edict-widget__item{margin-bottom:10px;display:block}.edict-widget__item:last-child{margin-bottom:0}.edict-widget__name,.person-item__name span{color:#000;line-height:1.2em;font-size:16px;font-weight:600;display:inline;-webkit-transition:all .2s;-o-transition:all .2s;transition:all .2s;border-bottom:1px solid transparent}.edict-widget__tags{margin-top:15px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-bottom:-10px}.edict-widget__tags>*{margin-right:5px;margin-bottom:5px}.edict-widget__tags>:last-child,.person-item__tags>:last-child{margin-right:0}.persons-widget{display:grid;grid-auto-flow:row;grid-gap:60px;-ms-flex-line-pack:start;align-content:start}.person-item__link{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:start;-ms-flex-align:start;align-items:start}.person-item__img{margin-right:20px;width:90px;min-width:90px;height:110px;max-width:unset}.person-item__info{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.person-item__title{margin-bottom:10px}.person-item__name{display:inline}.person-item__tags{margin-top:15px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-bottom:-10px}.person-item__tags>*{margin-right:5px;margin-bottom:5px}.calendar-widget__title{margin-bottom:15px}.calendar-widget__wrap{display:grid;grid-auto-flow:row;grid-gap:20px}.calendar-widget__link{color:#bcbcbc;font-size:16px;-webkit-transition:all .2s;-o-transition:all .2s;transition:all .2s}.calendar-widget__link._active,.calendar-widget__link:hover{color:#000}.calendar-widget__link._active{font-weight:700}.calendar-widget__year{display:grid;grid-gap:15px;grid-template-columns:repeat(7,auto)}.calendar-widget__month{display:grid;grid-gap:10px 20px;grid-template-columns:repeat(4,auto)}.calendar-widget__day{display:grid;grid-gap:15px;grid-template-columns:repeat(10,auto)}.news-tabs__header,.news-tabs__nav{display:-webkit-box;display:-ms-flexbox;display:flex}.news-tabs__nav{padding:0 40px}.news-tabs__link{font:20px "Oswald";text-transform:uppercase;color:#bcbcbc;margin-right:20px;-webkit-transition:all .2s;-o-transition:all .2s;transition:all .2s}.news-tabs__link:last-child{margin-right:0}.news-tabs__link._active,.news-tabs__link:hover{color:#133d8b}.news-tabs__link._active{font-weight:500}.news-addits__wrap,.news-tabs__wrap{display:grid;grid-gap:20px;grid-template-columns:repeat(3,1fr);padding-top:25px}.news-addits__wrap{grid-template-columns:repeat(4,1fr)}.news-addit__img{margin-bottom:15px;position:relative;height:180px}.news-addit__date{top:5px;left:5px}.news-addit__name{display:inline;font-size:18px;color:#000;line-height:1.2em;-webkit-transition:all .2s;-o-transition:all .2s;transition:all .2s;border-bottom:1px solid transparent}.news-addit__tags{margin-top:15px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-bottom:-10px}.news-addit__tags>*{margin-right:5px;margin-bottom:5px}.news-addit__tags>:last-child{margin-right:0}.news-addit_sm .news-addit__img{height:130px}.news-addit_sm .news-addit__name{font-size:16px}.slider-photo{background:#f0f0f0;padding:40px 0}.slider-photo__wrap{padding-top:25px}.slider-photo__item{height:270px;display:block}.slider-photo__item::after{content:"";display:block;position:absolute;top:0;left:0;width:100%;height:100%;background:-webkit-gradient(linear,left top,left bottom,color-stop(60%,transparent),to(rgba(0,0,0,.9)));background:-o-linear-gradient(top,transparent 60%,rgba(0,0,0,.9) 100%);background:linear-gradient(180deg,transparent 60%,rgba(0,0,0,.9) 100%);z-index:1}.anounce-video .anounce-banner__link:hover .anounce-banner__title span,.slider-photo__item:hover .slider-photo__name span{border-color:rgba(255,255,255,.6)}.infographics__img img,.slider-photo__img{width:100%;height:100%;-o-object-fit:cover;object-fit:cover}.slider-photo__img{position:relative}.slider-photo__name{position:absolute;bottom:30px;left:30px;right:30px;z-index:3;display:inline}.slider-photo__shading{position:absolute;width:120px;height:100%;top:0;z-index:2;background:-webkit-gradient(linear,right top,left top,from(rgba(0,0,0,.92)),to(transparent));background:-o-linear-gradient(right,rgba(0,0,0,.92) 0,transparent 100%);background:linear-gradient(270deg,rgba(0,0,0,.92) 0,transparent 100%)}.slider-photo__shading_left{left:0;-webkit-transform:rotate(-180deg);-ms-transform:rotate(-180deg);transform:rotate(-180deg)}.slider-photo__shading_right{right:0}.anounce-video{padding:70px 0}.anounce-video__wrap,.infographics__wrap{padding-top:25px;position:relative;display:grid;grid-gap:20px}.anounce-video__wrap{grid-template-columns:8fr 4fr;grid-template-rows:repeat(2,230px)}.anounce-video .anounce-banner__link{position:absolute;top:0;left:0;width:100%;height:100%;padding:25px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start}.anounce-video .anounce-banner__title{display:inline;border-bottom:unset}.anounce-video .anounce-banner__title span,.slider-photo__name span{display:inline;color:#fff;font-size:20px;font-weight:700;line-height:1.2em;text-shadow:2px 2px 3px rgba(0,0,0,.5);-webkit-transition:all .2s;-o-transition:all .2s;transition:all .2s;padding-bottom:1px;border-bottom:1px solid transparent}.anounce-video .anounce-banner_big{height:480px}.anounce-video .anounce-banner_big .anounce-banner__link{padding:50px}.anounce-video .anounce-banner_big .anounce-banner__title span{font-size:33px}.infographics__wrap{grid-template-columns:repeat(6,1fr)}.infographics__img{height:300px;display:block}.infographics__img img{-o-object-position:top;object-position:top}.infographics__text{margin-top:20px}.main{padding:40px 0 70px}.main__wrap{display:grid;grid-gap:50px;grid-template-columns:1fr 390px}.main__content,.main__sidebar{display:grid;grid-auto-flow:row;grid-gap:70px;-ms-flex-line-pack:start;align-content:start}.main__sidebar{grid-gap:60px;max-width:390px}.main__sidebar .title{font-size:24px}._accent-1{color:#af1c08}._accent-2{color:#133d8b}._accent-3{color:#bcbcbc}.title{font:500 28px/1.1em "Oswald";text-transform:uppercase}.title-link .title{-webkit-transition:all .2s;-o-transition:all .2s;transition:all .2s;border-bottom:2px solid transparent}.title-link._accent-1:hover .title,.title-link._accent-2:hover .title{border-color:#133d8b;color:#133d8b}.title-link._accent-3:hover .title{color:#133d8b}h1{display:none}.logo,.title{display:inline-block}.logo_header{position:relative;top:-5px}.menu-lang{padding:0 35px;display:inline-block}.menu-lang__list{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.menu-lang__item{margin-right:10px}.menu-lang__item:last-child{margin-right:0}.menu-lang__link,.search__link{-webkit-transition:all .2s;-o-transition:all .2s;transition:all .2s}.menu-lang__link{font:700 14px/1em "Alegreya Sans";text-transform:uppercase;color:#b8c9e8;display:inline-block;padding:5px}.menu-lang__link._active,.menu-lang__link:hover{color:#133d8b}.search__link{font-size:15px;color:#133d8b}.links-share{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.links-share__item{margin-bottom:15px}.links-share__item:last-child{margin-bottom:0}.links-share__link{width:25px;height:25px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;background:#bcbcbc}.links-share__link:hover{background:0 0}.links-share__link:hover .links-share__icon{font-size:34px}.links-share__link:hover .icon-soc-twitter{color:#55acee}.links-share__link:hover .icon-soc-facebook{color:#3b5998}.links-share__link:hover .icon-soc-instagram{color:#c21975}.links-share__link:hover .icon-soc-vk{color:#4c6c91}.links-share__link:hover .icon-soc-ok{color:#f68634}.links-share__link:hover .icon-soc-youtube{color:red}.links-share__link:hover .icon-soc-mail{color:#f99c06}.links-share__link:hover .icon-soc-telegram{color:#26a4e4}.links-share__link:hover .icon-soc-whatsapp{color:#25d366}.links-share__link:hover .icon-soc-android{color:#a4c639}.links-share__link:hover .icon-soc-rss{color:#f8991d}.links-share__icon{color:#fff;font-size:24px}.btn-tag,.label-date span{line-height:1em;white-space:nowrap}.btn-tag{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding:5px 10px;border:1px solid #bcbcbc;color:#bcbcbc;font-size:14px;-webkit-transition:all .2s;-o-transition:all .2s;transition:all .2s}.btn-tag:hover{border-color:#909090;color:#909090}.btn-tag_dark{border:unset;color:#a1a1a1;background:rgba(86,86,86,.5)}.btn-tag_dark:hover{background:#565656;color:#fff}.label-date{position:absolute;padding:4px 6px;background:rgba(86,86,86,.8);display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.label-date span{color:#fff;font-size:12px}@media (max-width:1312px){._container{max-width:970px}}@media (max-width:991.98px){._container{max-width:750px}}@media (max-width:767.98px){._container{max-width:none;padding:0 10px}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */